--------------------------------------------------------------------------------------------------------------------------------------
2022-02-10 Tomcat Notes .HAKSA CNTD. VIDEO.
--------------------------------------------------------------------------------------------------------------------------------------
0923 enroll/update. josn data 출력
1015~1028: chk boxes
1134,1324 login
1330: out.println(result)
1400,login 했을때 교수목록 출력되지 않을때
1444 presentation 
--------------------------------------------------------------------------------------------------------------------------------------
2022-02-09 Tomcat Notes .HAKSA CNTD. VIDEO.
--------------------------------------------------------------------------------------------------------------------------------------
저장 프로시저
PL_SQL

UPDATE COUNT BASED ON COUNT(*) OF A CERTAIN TABLE
WORKBENCH CODE:
update courses c set persons=(
   select count(*) from enrollments e where c.lcode=e.lcode
)
where c.lcode > '';

15:43 progress chart

select max(pcode)+1 code from professors;

select max(scode)+1 code from students;

select max(lcode) from courses;

select * from courses where instructor='228';
select * from students;
select * from professors;


select count(*) from view_enroll where lname like '자료%';

select count(*) from view_enroll where lname like '데이터%';
select * from courses;

update courses c set persons=(
	select count(*) from enrollments e where c.lcode=e.lcode
)
where c.lcode > '';
;

select * from courses;
select * from enrollments;
select count(*) from enrollments;

select * from view_stu;

select e.lcode,c.lname,e.edate,e.grade,c.pname,c.room, c.hours
from view_enroll e,view_cou c
where scode='92414029' and e.lcode=c.lcode;

call enroll('92414033');


--------------------------------------------------------------------------------------------------------------------------------------
2022-02-08 Tomcat Notes .HAKSA. VIDEO.
--------------------------------------------------------------------------------------------------------------------------------------
1122 substring code
14:38 교수 정보 불러오기.  데이터베이스에서 옵션매뉴으로 학과 불로오기
1626 print writer 
1636 delete/int result



--------------------------------------------------------------------------------------------------------------------------------------
2022.02.03~4 Tomcat Notes .API EX08. VIDEO.
--------------------------------------------------------------------------------------------------------------------------------------
QUESTIONS:


OBJECTIVES:


create table tbl_bookmark(
	id int auto_increment primary key,
	name varchar(500),
	url varchar(500),
	address varchar(500),
	tel varchar(100),
	date datetime default now(),
	x double,
	y double
);

desc tbl_bookmark;
select * from tbl_bookmark;


String clientId = "DC8ojH4p4RE2lMhourmV"; //애플리케이션 클라이언트 아이디값"
     String clientSecret = "1KTqGCjPFg"; //애플리케이션 클라이언트 시크릿값"


VIDEO:
13:55 INSERT
14:15 JSON OBJECT CART LIST

use bookdb;

insert into tbl_review(code,uid,text) values(242,'user01','괸찮았습니다');
insert into tbl_review(code,uid,text) values(242,'user02','괸찮았습니다');
insert into tbl_review(code,uid,text) values(242,'user03','괸찮았습니다');

select * from tbl_review;

select *from tbl_book;

create table tbl_book(
   code int auto_increment primary key,
    title varchar(200) not null,
    price int default 0,
    image varchar(200)
);


insert into tbl_book(title,price,image)
values('맛있는 디자인 프리미어 프로&애프터 이펙트 CC 2022', 20700, 'img01.jpg');
insert into tbl_book(title,price,image)
values('SQL 쿡북', 36000, 'img02.jpg');
insert into tbl_book(title,price,image)
values('1학년 바른 글씨', 10800, 'img03.jpg');
insert into tbl_book(title,price,image)
values('일상을 담는 아이패드 드로잉', 16200, 'img04.jpg');
insert into tbl_book(title,price,image)
values('혼자 공부하는 R 데이터 분석', 19800, 'img05.jpg');
insert into tbl_book(title,price,image)
values('IT CookBook, 디지털 논리회로 실험(2판)', 2500, 'img06.jpg');
insert into tbl_book(title,price,image)
values('초등 매일 독서의 힘', 15300, 'img07.jpg');
insert into tbl_book(title,price,image)
values('저는 주식투자가 처음인데요(기본편 2022년 개정판)', 6650, 'img08.jpg');
select * from tbl_book;

create table tbl_cart(
	id int auto_increment primary key,
	title varchar(200) not null,
	price int default 0,
	contents varchar(2000),
    image varchar(500)
);
select * from tbl_cart;
desc tbl_cart;

insert into tbl_cart(


--------------------------------------------------------------------------------------------------------------------------------------
2022.02.03  API. EX08
--------------------------------------------------------------------------------------------------------------------------------------
https://developers.kakao.com/docs/latest/ko/daum-search/dev-guide
response.setContentType("text/html;charset=utf-8");
한글 깨질때 Switch 위에 선언
--------------------------------------------------------------------------------------------------------------------------------------
2022.01.28 Tomcat Notes BOOK. EX07
--------------------------------------------------------------------------------------------------------------------------------------
OBJECTIVES:
SEE HOW PAGES CONNECT TO SERVLET
SEE HOW TO MAKE JSON OBJECTS 

CREATE EX07
ADD 5 LIB'S
JR>SRC>2 PACKAGES: MODEL AND CONTROLLER. LOWER CASE.
CREATE STYLE FOLDER
CREATE IMAGES FOLDER
IMPORT BACK.JPG UNDER IMAGES FOLDER
IMPORT DATABASE.JAVA UNDER MODEL
(OR USE SETUP FILE)
0857 DONE.

JR.INDEX/

PASTE UNDER DOGET:
RequestDispatcher dis= request.getRequestDispatcher("index.jsp");
		dis.forward(request, response);

SERVER.XML LN:127
<Context docBase="c:/image" path="/img" reloadable="true"/>

CREATE LIST.JSP 0940
CREATE BOOK SERVLET UNDER CONTROLLER. UPPERCASE.
PAGE SETUP ~1030
BOOKDAO 1014
import java sql. json.simple.*;

JSON OBJECT LIST
To check JSON LIST AFTER MAKING BOOK.JAVA(SERVLET) PATH
http://localhost:8088/list.json?page=1

LIST.JSP 10:57
--------------------------------------------------------------------------------------------------------------------------------------
2022.01.28 Workbench Notes. ID: Book. DB: Bookdb.
--------------------------------------------------------------------------------------------------------------------------------------


create table tbl_book(
   code int auto_increment primary key,
    title varchar(200) not null,
    price int default 0,
    image varchar(200)
);


insert into tbl_book(title,price,image)
values('맛있는 디자인 프리미어 프로&애프터 이펙트 CC 2022', 20700, 'img01.jpg');
insert into tbl_book(title,price,image)
values('SQL 쿡북', 36000, 'img02.jpg');
insert into tbl_book(title,price,image)
values('1학년 바른 글씨', 10800, 'img03.jpg');
insert into tbl_book(title,price,image)
values('일상을 담는 아이패드 드로잉', 16200, 'img04.jpg');
insert into tbl_book(title,price,image)
values('혼자 공부하는 R 데이터 분석', 19800, 'img05.jpg');
insert into tbl_book(title,price,image)
values('IT CookBook, 디지털 논리회로 실험(2판)', 2500, 'img06.jpg');
insert into tbl_book(title,price,image)
values('초등 매일 독서의 힘', 15300, 'img07.jpg');
insert into tbl_book(title,price,image)
values('저는 주식투자가 처음인데요(기본편 2022년 개정판)', 6650, 'img08.jpg');
select * from tbl_book;

--------------------------------------------------------------------------------------------------------------------------------------
2022.01.27 Tomcat Notes
--------------------------------------------------------------------------------------------------------------------------------------
Areas to Study:
How to make a basic table using table borders and table headers
enctype="multipart/form-data">
없으면 서버로 넘어가지 않는다

Types of Errors:
404:
Page does not exist

500:
Servlet error

405:
Servlet url mistype

###Procedures###
Double click Server and change Modules Path: "/" The "/" is necessary.

SRC. Create Java Resources(JR)/controller and model packages. under controller
WC. Create Main.java
controller: Product.java. Write menu: @WebServlet(value={"/list","/insert","/read","/update","/delete"})
switch(request.getServletPath()){} THEN menu cases. DECLARE RequestDispatcher dis=null
Write:
dis=request.getRequestDispatcher("list.jsp");
dis.forward(request, response);

WC: Create list.jsp and insert.jsp

09:16 productVO
JR. Create productvo and productdao
TestDB with main method

Product.java.
create: request.setAttribute("products", dao.list()); to add:dao.list to "products"

10:00
Edit server.xml. LN113
ADD: 
above. inside "host"   <Context docBase="ex06" path="/" reloadable="true"..
<Context docBase="c:/image" path="/img" reloadable="true"/>

10:50 MAX CODE 12:50 substring

미리보기 11:04


13:07 상품등록
insert.jsp

13:46 Product.java
 under doPost
//파일업로드
		String path="c:/image";
		MultipartRequest multi=new MultipartRequest(
				request,path, 1024*1024*10, "utf-8",new DefaultFileRenamePolicy());

13:53 Insert. 
14:39 Delete
1503 update
1520: sql order
15:23  old image
15:44 Home page JSON LIST. Also, add json simple

http://localhost:8088/ex06/list.json?page=1

MAIN.JSP
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
   <title>홍길동의 가구 쇼핑몰</title>
   <script src="http://code.jquery.com/jquery-3.1.1.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/3.0.1/handlebars.js"></script>
   <style>
      #container {width:900px; overflow:hidden;}
      .box {width:200px; float:left;}
   </style>
</head>
<body>
   <h1>홍길동의 가구 쇼핑몰</h1>
   <hr/>
   <a href="/">Home</a>
   <a href="/list">상품목록</a>
   <a href="/insert">상품등록</a>
   <hr/>
   <div>전체검색수:<span id="total"></span></div>
   <div id="container"></div>
   <script id="temp" type="text/x-handlebars-template">
      {{#each array}}
         <div class="box">
            <img src="/img/{{image}}" width=150>
            <div>{{pname}}</div>
            <div>{{price}}원</div>
         </div>
      {{/each}}
   </script>
   <div>
      <button id="prev">이전</button>
      <span id="curpage"></span>
      <button id="next">다음</button>
   </div>
</body>
<script>
   var page=1;
   getList();
   
   $("#prev").on("click", function(){
      page--;
      getList();
   });
   
   $("#next").on("click", function(){
      page++;
      getList();
   });
   
   function getList(){
      $.ajax({
         type:"get",
         dataType:"json",
         url:"/list.json",
         data:{page:page},
         success:function(data){
            var template = Handlebars.compile($("#temp").html());
            $("#container").html(template(data));
            $("#total").html(data.total);
            var lastPage=Math.ceil(data.total/4);
            $("#curpage").html(page + "/" + lastPage);
            
            if(page==1){
               $("#prev").attr("disabled", true);
            }else{
               $("#prev").attr("disabled", false);
            }
            
            if(page==lastPage){
               $("#next").attr("disabled", true);
            }else{
               $("#next").attr("disabled", false);
            }
         }
      })
   }
</script>
</html>

Product.java
JSON.list()
response.setContentType("text/html;charset=utf-8");
      PrintWriter out=response.getWriter();
      
      switch(request.getServletPath()) {
      case "/list.json":
         int page=Integer.parseInt(request.getParameter("page"));
         out.println(dao.listJSON(page));
         break;
--------------------------------------------------------------------------------------------------------------------------------------
2022.01.27 MySQL Notes
--------------------------------------------------------------------------------------------------------------------------------------
use productdb;

create table tbl_product(
code int auto_increment primary key,
title varchar(200) not null,
image varchar(200),
price int default 0
);

insert into tbl_product(title,price)
values('삼성노트북',1800000);

insert into tbl_product(title,price)
values('엘지노트북',1900000);

insert into tbl_product(title,price)
values('애플느트북',2500000);

select * from tbl_product;
select * from tbl_sale;


create table tbl_sale(
id int auto_increment primary key,
code int,
qnt int,
date datetime default now(),
price int default 0,
foreign key(code) references tbl_product(code)
);

insert into tbl_sale(code,qnt,price) values(5,100,1750000);
insert into tbl_sale(code,qnt,price) values(6,50,1890000);
insert into tbl_sale(code,qnt,price) values(7,60,2500000);
insert into tbl_sale(code,qnt,price) values(8,30,1000000);
insert into tbl_sale(code,qnt,price) values(9,20,1500000);

insert into tbl_sale(code,qnt,price) values(10,60,2500000);
--------------------------------------------------------------------------------------------------------------------------------------
2022.01.26 Tomcat Notes
--------------------------------------------------------------------------------------------------------------------------------------
How to Create pages in order:

#I. Stage one:
Create New Dynamic Project:
Create controller under Java Resources/src. Lower case.
Create model under Java Resources/src. Lower case.

###Today's project: Product/Sales###

Create Product under Java Resources/src./controller Uower case.
Create a servlet pass '/list' under controller: @WebServlet(value={"/list","/read"})

Optional:
Stop server, goto Web modules and delete /ex04 tag to make a simpler browser address

Create a view under Web content(WC)
list.jsp. Check page encoding.
insert.jsp. Check page encoding.

Register pages under Controller.
Add switch cases under get method:

switch(request.getServletPath()) {
		case "/list":
		break;

Above switch case, ADD RequestDispatcher dis=null;

case "/list":
dis=request.getRequestDispatcher("list.jsp");
break;

dis.forward(request, response);

add links between pages.
<a href="insert"></a>
list.jsp

#Stage II
Create tables and input data in DB in mySQL.
Add 3 lib's in Eclipse. Web Content/Web INF/liv.
Add database in Java Resources/model

JR/Model:
Create Product (VO)

Create DAO/Product 
import java.sql.*;
import java.util.*;
Make Product list method.
Make TestDB. Check Main method. Test dao.list();


LIST.JSP:
Add Product.info link:
<td width=300><a href="read?code=${vo.code}">${vo.title}</td>

*read page=insert
Create read.jsp page.

11:15
ProductDAO. Add Read method. Copy list method and change variables.
Product.java.
"/read"에서 코드 값 가져오기:
int code=Integer.parseInt(request.getParameter("code"));
			request.setAttribute("vo", dao.read(code));

Read.JSP:
Add form line:
상품번호:<input type="text" name="code" size="5"><hr/>

===================================
Declare:
ProductDAO dao=new ProductDAO();
under private statitc final long

Under /list:
request.setAttribute("products", dao.list());

List.jsp:
create table for list
declare jsp tab 반복문:
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>


/* Auto Formatter */
Handlebars.registerHelper("print", function(image){
	if(image){
		return image;
	}else{
		return "http://placehold.it/120x170";
	}
});

 Handlebars.registerHelper("printPrice", function(price){
    return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
 });


OPTIONAL. list.jsp. Declare <%@taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
@Table: Five format.
<td width=100><fmt:formatNumber value="${vo.price}" pattern="#,###"${vo.price}></fmt:formatNumber></td>

INSERT.JSP:
CREATE FORM. (10:44)
유효성 check script. $(frm).on..if name==""... check to see that "submit button links to the post method in product.java

PRODUCT.JAVA:
ADD POST METHOD:INSERT:
switch(request.getServletPath()) {
		case "/insert":
		ProductVO vo=new ProductVO();
			vo.setTitle(request.getParameter("title"));
			vo.setPrice(Integer.parseInt(request.getParameter("price")));
		}	

Set Encoding:
request.setCharacterEncoding("utf-8");

Print /insert with:
System.out.println(vo.toString());
Check console to see that it functions

PRODUCT.DAO. ADD INSERT METHOD:
PRODUCT.JAVA. ADD DAO.INSERT CMD. ADD RESPONSE.SENDREDIRECT("LIST").
Check Product info page.

Read.jsp:
update form action="update.

11:25
Update product.java: 
add update path "/update"
Update doPost method. 
Add update method. 
Cut shared variables and mov e it above switch path.
Check that updates are submitted corrected in console.

Product.java
update method:
Add dao.update(vo) line under /update
Redirect to "list"




Model:
Create: SalesVO. import java.util.Date;
Extend SalesVO to ProductVO(field중복 선언 필요 없이.
SaleDAO. Add /read method.
Product.java. add under /read
request.setAttribute("vo", sdao.list(code));

READ.JPS:
Add Sales table:
<h2>${vo.title}의 매출현황</h2>
<div>
판매일 <input type="date" id="date">
판매가 <input type="text" id="price" size=5>
판매수량 <input type="text" id="qnt" size=2>
</div>

Replace lines:
판매일 <input type="date" id="date" value="${today}">
판매가 <input type="text" id="price" size=5 value="$vo.price}">

14:08
product.java
ADD:
request.setAttribute("sales", sdao.list(code));

Date today=new Date();
			SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
			request.setAttribute("today", sdf.format(today));

Bring Sales info to display at read.jsp

##Sales INSERT

Create frm name="frmSale"
cut and paste Sale list table inside.

Like this:
<h2>${vo.title}의 매출현황</h2>
<form name="frmSale">
<div>
	판매일 <input type="date" name="date" value="${today}">
	판매가 <input type="text" name="price" size=5 value="$vo.price}">
	판매수량 <input type="text" name="qnt" size=2>
	<input type="submit" value="판매등록">
</div>
</form>

ADD: 
<input type="hidden" name="code" value="${vo.code}"> to table. Top line.

14:32
Create sale.java under controller.
Add method names "/sinsert"..
Defind doPost method:
Add switch getServletPath
Add case "/sinsert". Add saleVO

SaleDAO
Add Insert method\

Delete method. SaleDAO. 15:17

16:40
16:48



------------------------------------------------------------------------------------------------------------------------------------

/* Auto Formatter */
Handlebars.registerHelper("print", function(image){
	if(image){
		return image;
	}else{
		return "http://placehold.it/120x170";
	}
});

 Handlebars.registerHelper("printPrice", function(price){
    return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
 });

</script>
/* LIGHT BOX START */
/* LIGHT BOX  */

<style>
/* LIGHT BOX STYLE */
#darken-background {
       position: fixed;
       top:0px; left:0px; right:0px;
       height: 100%;
       display: none;
       background: rgba(0, 0, 0, 0.5);
       z-index: 10000;
       overflow-y: scroll;
   }
   #lightbox {
       width: 700px;
       margin: 20px auto; padding:15px;
       border: 1px solid #333333;
       border-radius: 5px;
       background: white;
       box-shadow: 0px 5px 5px rgba(34, 25, 25, 0.4);
       text-align: center;
   }

</style>

<!-- 라이트박스(not a java script)START -->
<div id="darken-background">
	<div id="lightbox">
		<img src="http://placehold.it/400x500" width=400 id="image">
		<h3><div id="title"></div></h3>ISBN: <span id="isbn"></span>
		<h4><div id="price"></div></h4>
		작가:<div id="authors"></div>
		<div id="contents"></div>
		<button id="cart">장바구니</button>	
		<button id="close">닫기</button>
	</div>
</div>
<!-- 라이트박스(not a java script)END -->

<!-- Lightbox -->
<script>
$("#container").on("click",".box img",function(){
	var image=$(this).attr("src");
	var title=$(this).attr("title");
	var isbn=$(this).attr("isbn");
	var price=$(this).attr("price")
	var authors=$(this).attr("authors");
	var contents=$(this).attr("contents");
	
	$("#title").html(title);
	$("#isbn").html(isbn);
	$("#price").html(price);
	$("#authors").html(authors);
	$("#image").attr("src",image);
	$("#contents").html(contents);
	
	$("#darken-background").show();
	
})

<!-- Darkenbox buttons -->
$("#close").on("click",function(){
	$("#darken-background").hide();
})
</script>
/* LIGHT BOX END */
/* LIGHT BOX */
--------------------------------------------------------------------------------------------------------------------------------------
2022.01.25-Camp CRUD
2022.01.25-Camp CRUD:ex04/TH=ex044

Port Kill(관리자 권한으로 실행할것
--------------------------------------------------------------------------------------------------------------------------------------
https://myblog.opendocs.co.kr/archives/1702
> netstat -a -n -o -p tcp
 
16:00

정보처리기사
model>Database.java
PASTE:
public static Connection CON;

   static {
      try {
         Class.forName("com.mysql.jdbc.Driver");
         CON=DriverManager.getConnection("jdbc:mysql://localhost:3306/webdb", "root", "1234");
      }catch(Exception e) { System.out.println("접속실패:" + e.toString()); }
    }

--------------------------------------------------------------------------------------------------------------------------------------
2022.01.24 Tomcat Notes
--------------------------------------------------------------------------------------------------------------------------------------
Before installing Apache on Eclipse Stop: Search 'Apache' in task manager(프로그램 충돌 방지) and STOP Apache service.
server installation directory:
C:programfiles/apache software foundation/tomcat 8.0
THEN:
push play button in eclipse to 'Run server'
(Make sure server is added in eclipse. Check by going to File,properties,Java Build Path, Add JARjsp.  Tomcat)
(Right click Project and Properties. Java Build Path. Add JARS. Add Tomcat.


To make new: File,new,Dynamic Web Project
Target Runtime:Apache

Change Preferences:Web,Encoding settings to UTF-8

ex01/div?num1=100&num2=200

To connect to DB add mysql-connector to WEB-INF>lib(PAST HERE)
Add to Eclipse>lib:
jstl